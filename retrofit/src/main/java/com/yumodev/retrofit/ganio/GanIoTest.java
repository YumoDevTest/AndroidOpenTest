package com.yumodev.retrofit.ganio;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Log;

import com.yumo.demo.view.YmTestFragment;
import com.yumodev.retrofit.Define;

import java.io.IOException;

import okhttp3.ResponseBody;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

/**
 * Created by yumodev on 17/12/14.
 */

public class GanIoTest extends YmTestFragment {
    public static final String LOG_TAG = Define.LOG_TAG_GANIO;
    Retrofit mRetrofit;
    GanIoService mService;
    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mRetrofit = new Retrofit.Builder()
                .baseUrl("http://gank.io/api/")
                .addConverterFactory(GsonConverterFactory.create())
                .build();

        mService = mRetrofit.create(GanIoService.class);
    }

    public void test(){
        showToastMessage("test");
    }

    /**
     * 获取历史API
     */
    public void testHistory(){
        mService.history().enqueue(new Callback<ResponseBody>() {
            @Override
            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {
                try {
                    Log.i(LOG_TAG, "onResponse:"+response.body().string());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onFailure(Call<ResponseBody> call, Throwable t) {
                Log.i(LOG_TAG, "onFailure:"+t.getMessage());
            }
        });
    }

    /**
     * 获取历史API
     */
    public void testDataCategory(){
        mService.dataCategory("Android", 10, 1).enqueue(new Callback<ResponseBody>() {
            @Override
            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {
                try {
                    Log.i(LOG_TAG, "onResponse:"+response.body().string());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onFailure(Call<ResponseBody> call, Throwable t) {
                Log.i(LOG_TAG, "onFailure:"+t.getMessage());
            }
        });
    }
}
