package com.yumodev.rxjava2;

import android.util.Log;

import com.yumo.demo.view.YmTestFragment;

import java.util.concurrent.TimeUnit;

import io.reactivex.Observable;
import io.reactivex.ObservableSource;
import io.reactivex.functions.Consumer;
import io.reactivex.functions.Function;


/**
 * Created by yumodev on 17/12/10.
 *
 * 转换操作符的使用
 */

public class RxJava2MapTestView extends YmTestFragment {

    public void testMap(){
        Observable.fromArray("Hello World".split(" "))
                .map(new Function<String, String>() {
                    @Override
                    public String apply(String s) throws Exception {
                        return s.toLowerCase();
                    }
                })
                .subscribe(new Consumer<String>() {
                    @Override
                    public void accept(String s) throws Exception {
                        Log.i(Define.LOG_TAG, "map: "+s);
                    }
                });
    }

    public void testFlatMap(){
        Observable.fromArray("Hello World".split(" "))
                .flatMap(new Function<String, ObservableSource<String>>() {
                    @Override
                    public ObservableSource apply(String s) throws Exception {
                        return Observable.just(s.toUpperCase(), s.toLowerCase(), s+"1234").delay(10, TimeUnit.SECONDS);
                    }
                })
                .subscribe(new Consumer<String>() {
                    @Override
                    public void accept(String s) throws Exception {
                        Log.i(Define.LOG_TAG, "flatMap: "+s);
                    }
                });
    }


    public void testConcatMap(){
        Observable.fromArray("Hello World".split(" "))
                .concatMap(new Function<String, ObservableSource<String>>() {
                    @Override
                    public ObservableSource apply(String s) throws Exception {
                        return Observable.just(s.toUpperCase(), s.toLowerCase(), s+"1234").delay(10, TimeUnit.SECONDS);
                    }
                })
                .subscribe(new Consumer<String>() {
                    @Override
                    public void accept(String s) throws Exception {
                        Log.i(Define.LOG_TAG, "concatMap: "+s);
                    }
                });
    }
}
